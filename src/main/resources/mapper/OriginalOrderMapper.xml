<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mc.refillCard.dao.OriginalOrderMapper">
  <resultMap id="BaseResultMap" type="com.mc.refillCard.entity.OriginalOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="transaction_id" jdbcType="BIGINT" property="transactionId" />
    <result column="num" jdbcType="BIGINT" property="num" />
    <result column="num_id" jdbcType="BIGINT" property="numId" />
    <result column="o_id" jdbcType="BIGINT" property="oId" />
    <result column="outer_id" jdbcType="VARCHAR" property="outerId" />
    <result column="outer_sku_id" jdbcType="VARCHAR" property="outerSkuId" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="sku_properties_name" jdbcType="VARCHAR" property="skuPropertiesName" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="pay_time" jdbcType="VARCHAR" property="payTime" />
    <result column="total_fee" jdbcType="VARCHAR" property="totalFee" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="before_balance" jdbcType="DECIMAL" property="beforeBalance" />
    <result column="after_balance" jdbcType="DECIMAL" property="afterBalance" />
    <result column="deduct_price" jdbcType="DECIMAL" property="deductPrice" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="external_order_id" jdbcType="VARCHAR" property="externalOrderId" />
    <result column="charge_account" jdbcType="VARCHAR" property="chargeAccount" />
    <result column="game_area_name" jdbcType="VARCHAR" property="gameAreaName" />
    <result column="good_type_id" jdbcType="BIGINT" property="goodTypeId" />
    <result column="good_type_name" jdbcType="VARCHAR" property="goodTypeName" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
    <result column="create_emp" jdbcType="VARCHAR" property="createEmp" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_emp" jdbcType="VARCHAR" property="updateEmp" />
  </resultMap>
  <resultMap id="BaseVoResultMap" type="com.mc.refillCard.vo.OriginalOrderVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="transaction_id" jdbcType="BIGINT" property="transactionId" />
    <result column="num" jdbcType="BIGINT" property="num" />
    <result column="num_id" jdbcType="BIGINT" property="numId" />
    <result column="o_id" jdbcType="BIGINT" property="oId" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="charge_account" jdbcType="VARCHAR" property="chargeAccount" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="pay_time" jdbcType="VARCHAR" property="payTime" />
    <result column="total_fee" jdbcType="VARCHAR" property="totalFee" />
    <result column="before_balance" jdbcType="DECIMAL" property="beforeBalance" />
    <result column="after_balance" jdbcType="DECIMAL" property="afterBalance" />
    <result column="deduct_price" jdbcType="DECIMAL" property="deductPrice" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="external_order_id" jdbcType="VARCHAR" property="externalOrderId" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="fail_reason" jdbcType="VARCHAR" property="failReason" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="seller_nick" jdbcType="VARCHAR" property="sellerNick" />
    <result column="buyer_nick" jdbcType="VARCHAR" property="buyerNick" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="buyer_area" jdbcType="VARCHAR" property="buyerArea" />
    <result column="game_area_name" jdbcType="VARCHAR" property="gameAreaName" />
    <result column="good_type_id" jdbcType="BIGINT" property="goodTypeId" />
    <result column="good_type_name" jdbcType="VARCHAR" property="goodTypeName" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, transaction_id, num, num_id, o_id, outer_id, outer_sku_id, payment, price, sku_properties_name,
    title, pay_time, total_fee, remark, before_balance, after_balance, deduct_price,
    supplier, external_order_id, order_status, fail_reason, charge_account, game_area_name,
    good_type_id, good_type_name, order_type, create_emp, create_time, update_time, update_emp
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from original_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="findPageVoByExample" resultMap="BaseVoResultMap">
   SELECT
    oo.id,oo.transaction_id,oo.num,oo.num_id,oo.o_id,oo.outer_id,oo.outer_sku_id,oo.payment,oo.price,
    oo.sku_properties_name,oo.title,oo.pay_time,oo.total_fee,oo.remark,oo.before_balance,oo.after_balance,
    oo.deduct_price,oo.supplier,oo.charge_account,oo.external_order_id,oo.order_status,oo.fail_reason,oo.create_emp,
    oo.create_time,oo.update_time,oo.update_emp,oo.game_area_name,oo.good_type_id, oo.good_type_name, oo.order_type,
    grf.type,
    gt.type_name,
    tr.receiver_address,tr.buyer_area,
    tr.seller_nick,
    tr.buyer_nick
    FROM
	original_order oo
	LEFT JOIN transaction tr ON oo.o_id = tr.tid
	LEFT JOIN goods_relate_fulu grf ON oo.num_id = grf.good_id
	LEFT JOIN good_type gt ON grf.type = gt.id
    WHERE 1=1
    <if test="userId != null">
     <!--  and (oo.create_emp = #{userId} or tr.create_emp =#{userId} )-->
      and oo.create_emp = #{userId}
    </if>
    <if test="startTime !=null and endTime !=null">
      AND oo.update_time between #{startTime} and #{endTime}
    </if>
    <if test="type != null">
      and grf.type = #{type,jdbcType=INTEGER}
    </if>
    <if test="orderType != null">
      and oo.order_type = #{orderType,jdbcType=INTEGER}
    </if>
    <if test="oId != null">
      and oo.o_id like concat('%',#{oId,jdbcType=BIGINT},'%')
    </if>
    <if test="chargeAccount != null and chargeAccount !='' " >
      and oo.charge_account like concat('%',#{chargeAccount,jdbcType=VARCHAR},'%')
    </if>
    <if test="sellerNick != null and sellerNick !=''">
      and tr.seller_nick like concat('%',#{sellerNick,jdbcType=VARCHAR},'%')
    </if>
    <if test="buyerNick != null and buyerNick !='' ">
      and tr.buyer_nick like concat('%',#{buyerNick,jdbcType=VARCHAR},'%')
    </if>
    <if test="externalOrderId != null and externalOrderId !=''">
      and oo.external_order_id like concat('%',#{externalOrderId,jdbcType=VARCHAR},'%')
    </if>
    <if test="orderStatus != null">
      and oo.order_status like concat('%',#{orderStatus,jdbcType=INTEGER},'%')
    </if>
    order by oo.update_time desc
  </select>
  <update id="orderFail">
    update original_order set order_status = 3,fail_reason ='订单超时'
    where update_time  &lt; date_add(NOW(), interval -60 MINUTE)
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from original_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mc.refillCard.entity.OriginalOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into original_order (transaction_id, num, num_id,
    o_id, outer_id, outer_sku_id,
    payment, price, sku_properties_name,
    title, pay_time, total_fee,
    remark, before_balance, after_balance,
    deduct_price, supplier, external_order_id,
    order_status, fail_reason, charge_account,
    game_area_name, good_type_id, good_type_name,
    order_type, create_emp, create_time,
    update_time, update_emp)
    values (#{transactionId,jdbcType=BIGINT}, #{num,jdbcType=BIGINT}, #{numId,jdbcType=BIGINT},
    #{oId,jdbcType=BIGINT}, #{outerId,jdbcType=VARCHAR}, #{outerSkuId,jdbcType=VARCHAR},
    #{payment,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{skuPropertiesName,jdbcType=VARCHAR},
    #{title,jdbcType=VARCHAR}, #{payTime,jdbcType=VARCHAR}, #{totalFee,jdbcType=VARCHAR},
    #{remark,jdbcType=VARCHAR}, #{beforeBalance,jdbcType=DECIMAL}, #{afterBalance,jdbcType=DECIMAL},
    #{deductPrice,jdbcType=DECIMAL}, #{supplier,jdbcType=VARCHAR}, #{externalOrderId,jdbcType=VARCHAR},
    #{orderStatus,jdbcType=INTEGER}, #{failReason,jdbcType=VARCHAR}, #{chargeAccount,jdbcType=VARCHAR},
    #{gameAreaName,jdbcType=VARCHAR}, #{goodTypeId,jdbcType=BIGINT}, #{goodTypeName,jdbcType=VARCHAR},
    #{orderType,jdbcType=INTEGER}, #{createEmp,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
    #{updateTime,jdbcType=TIMESTAMP}, #{updateEmp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mc.refillCard.entity.OriginalOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into original_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="numId != null">
        num_id,
      </if>
      <if test="oId != null">
        o_id,
      </if>
      <if test="outerId != null">
        outer_id,
      </if>
      <if test="outerSkuId != null">
        outer_sku_id,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="skuPropertiesName != null">
        sku_properties_name,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="beforeBalance != null">
        before_balance,
      </if>
      <if test="afterBalance != null">
        after_balance,
      </if>
      <if test="deductPrice != null">
        deduct_price,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="externalOrderId != null">
        external_order_id,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="failReason != null">
        fail_reason,
      </if>
      <if test="chargeAccount != null">
        charge_account,
      </if>
      <if test="gameAreaName != null">
        game_area_name,
      </if>
      <if test="goodTypeId != null">
        good_type_id,
      </if>
      <if test="goodTypeName != null">
        good_type_name,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="createEmp != null">
        create_emp,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateEmp != null">
        update_emp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        #{transactionId,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=BIGINT},
      </if>
      <if test="numId != null">
        #{numId,jdbcType=BIGINT},
      </if>
      <if test="oId != null">
        #{oId,jdbcType=BIGINT},
      </if>
      <if test="outerId != null">
        #{outerId,jdbcType=VARCHAR},
      </if>
      <if test="outerSkuId != null">
        #{outerSkuId,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="skuPropertiesName != null">
        #{skuPropertiesName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="beforeBalance != null">
        #{beforeBalance,jdbcType=DECIMAL},
      </if>
      <if test="afterBalance != null">
        #{afterBalance,jdbcType=DECIMAL},
      </if>
      <if test="deductPrice != null">
        #{deductPrice,jdbcType=DECIMAL},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="externalOrderId != null">
        #{externalOrderId,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="failReason != null">
        #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="chargeAccount != null">
        #{chargeAccount,jdbcType=VARCHAR},
      </if>
      <if test="gameAreaName != null">
        #{gameAreaName,jdbcType=VARCHAR},
      </if>
      <if test="goodTypeId != null">
        #{goodTypeId,jdbcType=BIGINT},
      </if>
      <if test="goodTypeName != null">
        #{goodTypeName,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="createEmp != null">
        #{createEmp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateEmp != null">
        #{updateEmp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mc.refillCard.entity.OriginalOrder">
    update original_order
    <set>
      <if test="transactionId != null">
        transaction_id = #{transactionId,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=BIGINT},
      </if>
      <if test="numId != null">
        num_id = #{numId,jdbcType=BIGINT},
      </if>
      <if test="oId != null">
        o_id = #{oId,jdbcType=BIGINT},
      </if>
      <if test="outerId != null">
        outer_id = #{outerId,jdbcType=VARCHAR},
      </if>
      <if test="outerSkuId != null">
        outer_sku_id = #{outerSkuId,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="skuPropertiesName != null">
        sku_properties_name = #{skuPropertiesName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="beforeBalance != null">
        before_balance = #{beforeBalance,jdbcType=DECIMAL},
      </if>
      <if test="afterBalance != null">
        after_balance = #{afterBalance,jdbcType=DECIMAL},
      </if>
      <if test="deductPrice != null">
        deduct_price = #{deductPrice,jdbcType=DECIMAL},
      </if>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="externalOrderId != null">
        external_order_id = #{externalOrderId,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="failReason != null">
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="chargeAccount != null">
        charge_account = #{chargeAccount,jdbcType=VARCHAR},
      </if>
      <if test="gameAreaName != null">
        game_area_name = #{gameAreaName,jdbcType=VARCHAR},
      </if>
      <if test="goodTypeId != null">
        good_type_id = #{goodTypeId,jdbcType=BIGINT},
      </if>
      <if test="goodTypeName != null">
        good_type_name = #{goodTypeName,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="createEmp != null">
        create_emp = #{createEmp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateEmp != null">
        update_emp = #{updateEmp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mc.refillCard.entity.OriginalOrder">
    update original_order
    set transaction_id = #{transactionId,jdbcType=BIGINT},
      num = #{num,jdbcType=BIGINT},
      num_id = #{numId,jdbcType=BIGINT},
      o_id = #{oId,jdbcType=BIGINT},
      outer_id = #{outerId,jdbcType=VARCHAR},
      outer_sku_id = #{outerSkuId,jdbcType=VARCHAR},
      payment = #{payment,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      sku_properties_name = #{skuPropertiesName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      before_balance = #{beforeBalance,jdbcType=DECIMAL},
      after_balance = #{afterBalance,jdbcType=DECIMAL},
      deduct_price = #{deductPrice,jdbcType=DECIMAL},
      supplier = #{supplier,jdbcType=VARCHAR},
      external_order_id = #{externalOrderId,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=INTEGER},
      fail_reason = #{failReason,jdbcType=VARCHAR},
      charge_account = #{chargeAccount,jdbcType=VARCHAR},
      game_area_name = #{gameAreaName,jdbcType=VARCHAR},
      good_type_id = #{goodTypeId,jdbcType=BIGINT},
      good_type_name = #{goodTypeName,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=INTEGER},
      create_emp = #{createEmp,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_emp = #{updateEmp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>